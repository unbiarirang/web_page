title Socket.IO chat
link(rel='stylesheet', href='/stylesheets/chatRoom.css')
script(src='/socket.io/socket.io.js')
script(src='http://code.jquery.com/jquery-1.11.1.js')

body
	div.twoBtn
		div.left
			input#back(type='button', value='back', action = '/')
		div.right
			input#ready(type='button', value='ready')
	ul#messages
	form#name
		input#m(autocomplete='off')
		button Send

script.
	const
		WAITING_TIME = 30000;

	var my_turn = false;
	var timer;
	var room_id = !{room_id != null? JSON.stringify(room_id): 'null'};
	var user_id = !{user_id != null? JSON.stringify(user_id): 'null'};
	var user_uuid = !{user_uuid != null? JSON.stringify(user_uuid): 'null'};

	$(function() {
		var socket = io();
		var data = {};

		data.room_id = room_id;
		data.user_id = user_id;
		data.user_uuid = user_uuid;

		socket.emit('addUser', data);

		// 그냥 채팅 이벤트
		//- $('form').submit(function () {
		//- 	socket.emit('chat', $('#m').val());
		//- 	$('#m').val('');
		//- 	return false;
		//- });

		$('form').on('submit', function () {
			if (my_turn) {
				var value = $('#m').val();
				$('#m').val('');
				controlPiece(value, () => {
					socket.emit('chat', value);

					if (value == 'finish') { //게임 종료 조건
						socket.emit('finish');
						saveResult();
					}
					else
						socket.emit('yourTurn');

					clearTimeout(timer);
					my_turn = false;
				});
			}
			return false;
		});

		$('#back').on('click', () => {
			window.location.href = '/chat';
		});

		$('#ready').on('click', () => {
			socket.emit('ready', data);
		});

		socket.on('chat', function (msg) {
			$('#messages').append($('<li>').text(msg));
		});

		socket.on('myTurn', function () {
			console.log('내차례임');
			my_turn = true;
			timer = setTimeout(function () {
				console.log('시간이 다 지남');
				my_turn = false;
				socket.emit('yourTurn');
			}, WAITING_TIME);	
		});

		socket.on('terminate', function () { //상대방이 나가면 1분 뒤 자동 퇴장.
			var count = 60;

			$('#messages').append($('<li class="count">').text('SERVER: 60초 후에 자동으로 승리 및 퇴장합니다.'));
			var tid = setInterval(function () {
				if (count == 1) {
					clearInterval(tid);
					socket.emit('finish');
					saveResult();
					return;
				}

				if (count <= 0) {
					clearInterval(tid);
					socket.emit('resume');
					return;
				}

				count--;
				$('.count').last().text('SERVER: ' + count + '초 후에 자동으로 승리합니다.');
			}, 1000);

			socket.on('resume', function () { count = 0; }); //상대방 돌아옴. 다시 시작.
		});

		setInterval(function heartBeat () {		//이게 클라이언트에서 일정 시간 반응이 없으면 소켓 연결이 
			socket.emit('heartBeat');			//끊어지기 때문에 허트비트를 해놧음. 만약 자동으로 끊어지길
		}, 30000);								//원하면 없에면됨. 아마.
	});

	function controlPiece (value, callback) {
		$.ajax({
			url: '/chat/' + room_id + '/controlPiece',
			type: 'POST',
			data: {
				'value': value
			},
			success: function (resultData) {
				console.log('resultData: ', resultData);

				callback();
			}
		});
	}

	function saveResult (data) {
		$.ajax({
			url: '/chat/' + room_id + '/saveResult',
			type: 'POST',
			data: {
				'user_id': user_id
			},
			success: function (resultData) {
				console.log('saveResult - resultData: ', resultData);
			}
		});
	} 